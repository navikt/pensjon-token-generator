name: "Build and deploy pensjon-maskinporten-test"

on:
  push

jobs:
  "build":
    name: "build"
    permissions:
      contents: "read"
      checks: "write"
      id-token: "write"
    runs-on: "ubuntu-latest"
    outputs:
      version: ${{ steps.version.outputs.version }}
      image: "${{ steps.login.outputs.registry }}/pensjon-elsam-minibuss/pensjon-elsam-minibuss:${{ env.VERSION }}"

    steps:
      - uses: "actions/checkout@v4"

      - uses: "gradle/actions/wrapper-validation@v3"

      - uses: "actions/setup-java@v4"
        with:
          "cache": "gradle"
          "distribution": "temurin"
          "java-version": "17"

      - name: "compile and run tests"
        env:
          "GITHUB_TOKEN": "${{ secrets.READER_TOKEN }}"
        run: "./gradlew build"

      - name: Set version
        id: version
        shell: bash
        run: |
          TIME=$(TZ="Europe/Oslo" date +%Y.%m.%d-%H.%M)
          COMMIT=$(git rev-parse --short=12 HEAD)
          export VERSION="$TIME-$COMMIT"
          echo "VERSION=$VERSION" >> $GITHUB_ENV
          echo "VERSION=$VERSION" >> $GITHUB_OUTPUT

      - name: NAIS login
        uses: nais/login@v0
        id: login
        with:
          project_id: ${{ vars.NAIS_MANAGEMENT_PROJECT_ID }}
          identity_provider: ${{ secrets.NAIS_WORKLOAD_IDENTITY_PROVIDER }}
          team: pensjon-saksbehandling

      - name: "Build and publish Docker image"
        uses: docker/build-push-action@v6
        id: build_push
        with:
          context: .
          file: Dockerfile
          tags: "${{ steps.login.outputs.registry }}/${{ github.repository }}/${{ github.repository }}:${{ env.VERSION }},${{ steps.login.outputs.registry }}/${{ github.repository }}/${{ github.repository }}:main"
          cache-from: |
            "type=registry,ref=${{ steps.login.outputs.registry }}/${{ github.repository }}/${{ github.repository }}:main"
          cache-to: type=inline

  "deployAppToDev":
    if: github.ref == 'refs/heads/main'
    name: "Deploy app to dev"
    permissions:
      contents: "read"
      id-token: "write"
    needs: "build"
    runs-on: "ubuntu-latest"
    steps:
      - uses: "actions/checkout@v4"
      - name: "Deploy to DEV"
        uses: "nais/deploy/actions/deploy@v2"
        env:
          IMAGE: "${{ needs.build.outputs.image }}"
          "CLUSTER": "dev-gcp"
          "RESOURCE": ".nais/nais.yaml"
